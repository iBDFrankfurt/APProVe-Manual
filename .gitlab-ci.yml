image: docker:19.03

variables:
  REGISTRY_URL: "registry.gitlab.ibdf-frankfurt.de"
 #The services keyword defines just another Docker image that is run during your job and is linked to the Docker image that the image keyword defines.
 #This allows you to access the service image during build time.
services:
   # docker:dind builds on docker:latest and starts a docker daemon as its entrypoint.
  - docker:19.03-dind
   
 # Cache downloaded dependencies and plugins between builds.
 # To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  paths:
    - $CI_PROJECT_DIR/.m2/repository
    - target/
  key: $CI_PIPELINE_ID

stages:
  - dockerize

dockerize_manual:
  image: docker:stable
  stage: dockerize
  artifacts:
    paths:
      - node_modules/
    expire_in: 1 week
  script:
    # Login to repository and build it with tag as defined in Variables and pushes it to repository
    - docker login -u tschneider -p 3naVg4rBZd86Adsx-G9u $REGISTRY_URL
    - docker build -t $REGISTRY_URL/proskive/uct-manual-service .
    - docker push $REGISTRY_URL/proskive/uct-manual-service
    - echo "Building public version"
    - docker build -t $REGISTRY_URL/uct/open-approve/uct-manual-service-v2:latest .
    - docker push $REGISTRY_URL/uct/open-approve/uct-manual-service-v2:latest
